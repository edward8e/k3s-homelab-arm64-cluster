apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-radarr
  namespace: radarr
  labels:
    app: radarr
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: radarr
  template:
    metadata:
      labels:
        app: radarr
    spec:
      containers:
        - name: radarr
          image: "linuxserver/radarr:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7878
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          readinessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 60
            failureThreshold: 5
            timeoutSeconds: 10
          env:
            - name: TZ
              value: "America/Los_Angeles"
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          resources:
            {}
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: pvc-radarr-config
      - name: downloads
        nfs:  
          server: 192.168.0.150
          path: "/mnt/user/Media/"